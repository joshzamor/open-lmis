/*
 * This program was produced for the U.S. Agency for International Development. It was prepared by the USAID | DELIVER PROJECT, Task Order 4. It is part of a project which utilizes code originally licensed under the terms of the Mozilla Public License (MPL) v2 and therefore is licensed under MPL v2 or later.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the Mozilla Public License as published by the Mozilla Foundation, either version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the Mozilla Public License for more details.
 *
 * You should have received a copy of the Mozilla Public License along with this program. If not, see http://www.mozilla.org/MPL/
 */

configurations {
    flyway
    classpath
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.1.1',
            'com.googlecode.flyway:flyway-core:1.7',
            'com.googlecode.flyway:flyway-ant:1.7',
            project(':modules:db')

    flyway 'com.googlecode.flyway:flyway-ant:1.7',
            'postgresql:postgresql:9.1-901.jdbc4'
    classpath 'postgresql:postgresql:9.1-901.jdbc4'

    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        jar
        testFixtures testJar
    }
}

task setupExtensions() << {
    ext.flyway_classpath = files(configurations.flyway)
    ant.taskdef(name: 'flywayInit', classname: 'com.googlecode.flyway.ant.InitTask', classpath: ext.flyway_classpath.asPath)
    ant.flywayInit(driver: 'org.postgresql.Driver', url: "jdbc:postgresql://$databaseHostName:$databasePort/$dbName", user: dbUser, password: dbPassword, table: 'migration_schema_version'  )
    tasks.migrateExtensions.execute()
}

jar.doFirst {
    tasks.migrateExtensions.execute()
}

task migrateExtensions() << {
    println("Migrating database extensions")
    ext.flyway_classpath = files(sourceSets.main.resources.srcDirs) + files(configurations.flyway)
    ant.taskdef(name: 'flywayMigrate', classname: 'com.googlecode.flyway.ant.MigrateTask', classpath: ext.flyway_classpath.asPath)
    ant.taskdef(name: 'flywayInit', classname: 'com.googlecode.flyway.ant.InitTask', classpath: ext.flyway_classpath.asPath)
    ant.flywayMigrate( driver: 'org.postgresql.Driver', url: "jdbc:postgresql://$databaseHostName:$databasePort/$dbName", user: dbUser, password: dbPassword, table: 'migration_schema_version', baseDir: sourceSets.main.resources.srcDirs , basePackage: sourceSets.main.resources.srcDirs)
}



