/*
 * This program was produced for the U.S. Agency for International Development. It was prepared by the USAID | DELIVER PROJECT, Task Order 4. It is part of a project which utilizes code originally licensed under the terms of the Mozilla Public License (MPL) v2 and therefore is licensed under MPL v2 or later.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the Mozilla Public License as published by the Mozilla Foundation, either version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the Mozilla Public License for more details.
 *
 * You should have received a copy of the Mozilla Public License along with this program. If not, see http://www.mozilla.org/MPL/
 */


apply plugin: 'cobertura'

dependencies {
  compile  'postgresql:postgresql:9.1-901.jdbc4',
            'com.mchange:c3p0:0.9.2.1',
          'net.sf.jasperreports:jasperreports:5.0.4',
          'org.codehaus.groovy:groovy-all:2.3.9',
          'com.lowagie:itext:4.2.0',
          'org.apache.poi:poi:3.7',
      project(':modules:authentication'),
      project(':modules:requisition'),
      project(':modules:core')


    testCompile project(path : ':modules:core', configuration: 'testFixtures')

    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }


    task compileJasperReport(type: JavaExec) {
        main = 'org.openlmis.report.util.JasperReportCompiler'
        //  args = "".split().toList()
        classpath sourceSets.main.output.classesDir
        classpath configurations.runtime
    }

    compileJava.doLast{
        tasks.compileJasperReport.execute()
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        testFixtures testJar
    }

}

cobertura {
  coverageFormats << 'xml'
  coverageIgnoreTrivial = true
}

